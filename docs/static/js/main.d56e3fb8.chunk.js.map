{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","placeholder","onChange","currentTarget","value","GifGridItem","id","title","url","className","src","alt","GifGrid","category","images","setImages","useEffect","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","downsized_medium","GifExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"uMAgCeA,EA9BK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAAgB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAiBlD,OACI,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEmB,KAAfJ,IACFH,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACAK,KAAM,OACNC,YAAY,wBACZC,SAnBkB,SAACJ,GACvBF,EAAcE,EAAEK,cAAcC,QAmB1BA,MAAST,Q,uBCfNU,EATY,SAAC,GAAwB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAErC,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKC,IAAKF,EAAKG,IAAKJ,OC+BjBK,EAnCC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACAnB,mBAAS,IADT,mBACrBoB,EADqB,KACbC,EADa,KAG5BC,qBAAU,WACNC,MACD,IAGH,IAAMA,EAAO,uCAAG,oCAAAC,EAAA,6DACNV,EADM,0FACmFW,UAAUN,GAD7F,qBAEOO,MAAMZ,GAFb,cAENa,EAFM,gBAGSA,EAAKC,OAHd,gBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHpB,GAAIoB,EAAIpB,GACRC,MAAOmB,EAAInB,MACXC,IAAKkB,EAAIZ,OAAOa,iBAAiBnB,QAIzCO,EAAUS,GAbE,4CAAH,qDAiBb,OACI,qCACA,6BAAKX,IACL,qBAAKJ,UAAY,YAAjB,SACKK,EAAOW,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA4BnB,MAASmB,EAAInB,MAAQC,IAAKkB,EAAIlB,KAAtCkB,EAAIpB,aCLzCsB,EAvBM,WAAO,IAAD,EAEclC,mBAAS,IAFvB,mBAEhBD,EAFgB,KAEJD,EAFI,KAKvB,OACI,sBAAKiB,UAAU,cAAf,UACI,4CACA,cAAC,EAAD,CAAajB,cAAgBA,EAAeC,WAAcA,IAC1D,uBAEA,6BAEQA,EAAWgC,KAAK,SAACI,GACb,OAAO,cAAC,EAAD,CAAShB,SAAWgB,GAAUA,YCZ7DC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d56e3fb8.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddCategory = ({ setCategories, categories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.currentTarget.value);\n    }\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n\n        if (!(inputValue === '')){\n            setCategories([inputValue, ...categories])\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <h4>{inputValue}</h4>\n            <input \n            type= \"text\" \n            placeholder=\"Search for any Gifs!!\"\n            onChange = { handleInputChange }\n            value = {inputValue}\n            ></input>\n        </form>\n    )\n}\n\nexport default AddCategory;","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url } ) => {\n\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title}/>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import React, {useEffect, useState} from 'react'\nimport GifGridItem from './GifGridItem';\nconst GifGrid = ({category}) => {\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        getGifs();\n    }, []);\n\n\n    const getGifs = async() => {\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=KnqrOs6orhs7p7WzbKTdNlZ8JhHtdAxJ&q=${encodeURI(category)}&limit=5`;\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        })\n\n        setImages(gifs);\n    }\n\n\n    return (\n        <>\n        <h3>{category}</h3>\n        <div className = \"card-grid\">\n            {images.map( img => <GifGridItem key = {img.id} title= { img.title } url={img.url}/>)}\n        </div>\n        </>\n    );\n}\n\nexport default GifGrid;\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\nconst GifExpertApp = () => {\n\n    const [categories, setCategories ] = useState([]);\n\n\n    return (\n        <div className=\"mini-navbar\">\n            <h2>Giffy App!</h2>\n            <AddCategory setCategories= {setCategories} categories = {categories}/> \n            <hr />\n\n            <ol>\n                {\n                    categories.map( (cat) => {\n                        return <GifGrid category= {cat} key={cat}/>\n                    })\n                }\n            </ol>\n        </div>\n\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}